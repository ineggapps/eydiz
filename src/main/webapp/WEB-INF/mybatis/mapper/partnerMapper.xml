<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="partner">


<!-- 전체 리스트의 데이터 개수 구하기 -->
<select id="dataCount" parameterType="map" resultType="Integer">
	SELECT NVL(COUNT(*), 0)
	FROM brand
	<where>
		<if test="keyword!=null and keyword != ''">
			INSTR(brandName, #{keyword}) &gt; 0
		</if>
	</where>
</select>


<!-- 브랜드 리스트 -->
<select id="listPartner" parameterType="map" resultType="com.eydiz.partner.Partner">
	SELECT brandNo, brandName, memberImageUrl, managerName, managerEmail
	FROM brand b
	JOIN member_detail md ON b.memberNo = md.memberNo
	<where>
		<if test="keyword != null and keyword != ''">
			INSTR(brandName, #{keyword}) &gt; 0
		</if>
	</where>
	ORDER BY brandNo DESC
	OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
</select>





<!-- 글 보기 -->
<select id="readPartner" parameterType="Integer" resultType="com.eydiz.partner.Partner">
	SELECT brandNo, brandName 
	FROM brand
	WHERE brandNo = #{brandNo}
</select>



<!-- 전체 브랜드 개수 -->
<select id="totalBrandCount" resultType="Integer">
	SELECT NVL(COUNT(brandNo),0) totalBrandCount
	FROM brand
</select>



<!-- 브랜드의 총 펀딩액 -->
<select id="brandTotalAmount" parameterType="Integer" resultType="Double">
	SELECT NVL(SUM(totalAmount),0) brandTotalAmount
	FROM brand b 
	JOIN project p ON b.brandNo = p.brandNo
	JOIN (
        SELECT projectNo, sum(totalAmount) totalAmount
        FROM reward_buy_overview
        GROUP BY projectNo
	) ro ON p.projectNo = ro.projectNo
	WHERE b.brandNo = #{brandNo} AND statusNo = 6
    GROUP BY b.brandNo
</select>

<!-- 프로젝트 리스트 개수 구하기 -->
<select id="pDataCount" parameterType="map" resultType="Integer">
	SELECT NVL(COUNT(projectNo),0) 
	FROM project
	WHERE brandNo = #{brandNo} AND statusNo = #{statusNo}
</select>


<!-- 프로젝트 리스트 -->
<select id="listProject" parameterType="map" resultType="com.eydiz.partner.Partner">
	SELECT p.brandNo,brandName, p.projectNo, projectName, categoryName ,projectImageUrl,  NVL(totalAmount,0) projectTotalAmount, NVL(TRUNC((totalAmount/projectGoalAmount*100),1),0) percentage 
		FROM brand b
		JOIN project p ON p.brandNo = b.brandNo
        LEFT OUTER JOIN(
            SELECT projectNo, sum(totalAmount) totalAmount
            FROM reward_buy_overview
            GROUP BY projectNo
            ORDER BY totalAmount DESC
        ) ro ON p.projectNo = ro.projectNo
    JOIN project_category pc ON p.categoryNo = pc.categoryNo
	WHERE b.brandNo = #{brandNo} AND p.statusNo = #{statusNo}
	ORDER BY projectNo DESC
	OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
</select>

<!-- 전체 프로젝트의 개수 -->
<select id="totalProjectCount" resultType="Integer">
	SELECT NVL(COUNT(projectNo),0) totalProjectCount
	FROM project p
	JOIN brand b ON p.brandNo = b.brandNo
	WHERE statusNo = 6 OR statusNo = 5
</select>


<!-- 이디즈 프로젝트에 참여한 전체 인원수 -->
<select id="totalBuyMemberCount" resultType="Integer">
	SELECT NVL(COUNT(totalJoinMember),0) totalBuyMemberCount
	FROM project p
	JOIN  (		
	    SELECT COUNT(memberNo) totalJoinMember, projectNo FROM (
	        SELECT m.memberNo, p.projectNo, SUM(finalAmount) finalAmount
	        FROM member m
	        JOIN reward_buy_overview o ON o.memberNo = m.memberNo
	        JOIN project p ON o.projectNo = p.projectNo
	        GROUP BY m.memberNO, p.projectNo
        )
        GROUP BY projectNo
    ) x ON p.projectNo = x.projectNo
JOIN brand b ON p.brandNo = b.brandNo
</select>

<!-- 브랜드의 프로젝트 수 -->
<select id="brandTotalProject" parameterType="Integer" resultType="Integer">
	SELECT NVL(COUNT(projectNo),0) brandTotalProject
	FROM project p
	JOIN brand b ON p.brandNo = b.brandNo
	WHERE b.brandNo = #{brandNo} AND (statusNo = 6 OR statusNo = 5)
</select>


<!-- 브랜드 이미지주소 -->
<select id="memberImageUrl" parameterType="Integer" resultType="String">
	SELECT memberImageUrl
	FROM member_detail m
	JOIN brand b ON m.memberNo = b.memberNo
	WHERE b.brandNo = #{brandNo}
</select>


<!-- 브랜드 프로젝트에 참여한 인원수 -->
<select id="brandTotalBuyMember" parameterType="Integer" resultType="Integer">
	SELECT NVL(COUNT(totalJoinMember),0) brandTotalBuyMember
	FROM project p
	JOIN  (		
	    SELECT COUNT(memberNo) totalJoinMember, projectNo FROM (
	        SELECT m.memberNo, p.projectNo, SUM(finalAmount) finalAmount
	        FROM member m
	        JOIN reward_buy_overview o ON o.memberNo = m.memberNo
	        JOIN project p ON o.projectNo = p.projectNo
	        GROUP BY m.memberNO, p.projectNo
        )
        GROUP BY projectNo
    ) x ON p.projectNo = x.projectNo
	JOIN brand b ON p.brandNo = b.brandNo
	WHERE b.brandNo = #{brandNo}
</select>



</mapper>